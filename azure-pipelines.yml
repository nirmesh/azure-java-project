# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- none

resources:
  repositories:
    - repository: AKS-App-RatingService
      type: git
      name: https://DineshGinwali@dev.azure.com/DineshGinwali/DTXConsulting/_git/DTXConsulting/Application build and deployment/AKS-App-RatingService
      ref: Build_Java_based_aplication_and_deploy_in_to_vmware_VM 

parameters:
- name: resourceGroup # name of the parameter; required
  type: string # data type of the parameter; required
  default: aks-resg-001
- name: kubernetesServiceConnection
  type: string
  default: AKS-SC
- name: ACRServiceConnection
  type: string
  default: ACR-SC

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: ${{ parameters.ACRServiceConnection }}
  imageRepository: 'product-service'
  containerRegistry: 'dellemcacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - bash: echo $(System.DefaultWorkingDirectory) && ls $(System.DefaultWorkingDirectory)
    - bash: echo $(Build.ArtifactStagingDirectory) && ls $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/*.yaml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - bash: echo $(System.DefaultWorkingDirectory) && ls $(System.DefaultWorkingDirectory)
    - bash: echo $(Build.ArtifactStagingDirectory) && ls $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'manifests'
        publishLocation: 'Container'
    
    - bash: echo $(Build.ArtifactStagingDirectory) && ls $(Build.ArtifactStagingDirectory)

- stage: Deploy
  displayName: Deploy image
  jobs:  
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - bash: echo $(Build.ArtifactStagingDirectory) && ls $(Build.ArtifactStagingDirectory)
    - bash: echo $(Build.ArtifactsDirectory) && ls $(Build.ArtifactsDirectory)
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifests'
        itemPattern: '**/*.yaml'
        targetPath: '$(System.ArtifactsDirectory)'
    - bash: echo $(Build.ArtifactsDirectory) && ls $(Build.ArtifactsDirectory)
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: ${{ parameters.kubernetesServiceConnection }}
        namespace: 'default'
        manifests: '$(System.ArtifactsDirectory)/deployment.yaml'
        containers: 'dellemcacr.azurecr.io/product-service:$(tag)'